// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get android {
    final String androidapi = dotenv.env['ANDROIDAPIKEY'] ?? '';

    return FirebaseOptions(
      apiKey: androidapi,
      appId: '1:1058376954909:android:d2c265674253d7fa7b42f4',
      messagingSenderId: '1058376954909',
      projectId: 'at-lab-project-3dbae',
      storageBucket: 'at-lab-project-3dbae.appspot.com',
    );
  }

  static FirebaseOptions get ios {
    final String iosapi = dotenv.env['IOSAPIKEY'] ?? '';

    return FirebaseOptions(
      apiKey: iosapi,
      appId: '1:1058376954909:ios:72f2501a48c0f9fd7b42f4',
      messagingSenderId: '1058376954909',
      projectId: 'at-lab-project-3dbae',
      storageBucket: 'at-lab-project-3dbae.appspot.com',
      iosBundleId: 'com.example.atProject',
    );
  }
}
